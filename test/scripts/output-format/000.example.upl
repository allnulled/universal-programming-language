#fn=reversable function
#sum=reversable function
#subs=reversable function
#div=reversable function
#ret=return
#mult=reversable function
#create=create variable
#tag=xml tag
#attr=xml attributes
#cont=xml contents

import{ @fs }from{ "fs" }
import{ @path }from{ "path" }
import{ @globby }from{ "globby" }
import{ @express }from{ "express" }
import{ @upl }from{ "@allnulled upl" }
create variable{ @a }as{ "a" }
#create{ @b }as{ "This can be a multiline string\nfdsafdsa" }
"Hello, folks!" | print{ @ }
assign{ @ }as{
  #tag{
    "div"
    object{
      id="main_application"
      class="application"
    }
    list{ #tag{ "h1" list{} "Hello from html app!" } }
  }
}
class{ @last_class }extends{ @another_class }with{
  static class property{ @default_configurations }as{ object{ } }
  static class method{ @create }as{
    async function{}that{
      print{ "Creating a instance from static method" }
    }
  }
  class property{ @data }as{ object{ } }
  class method{ @constructor }as{
    async function{ @options }that{ print{ "This is a constructor" } }
  }
}
object{
  name="admin"
  password="admin"
  email="admin@admin.org"
  authenticate=async function{ @url }that{
    create{ @answer }as{
      ajax post{ @url @this.name @this.password } | await{ @ }
    }
    print{ @answer }
  }
}
export{ @.name }as es6 property{ @name }
export{ @.password }as es6 property{ @password }
export{ @.email }as es6 property{ @email }
export{
  @.authenticate{ "http://127.0.0.1:9090/auth" }.then{
    function{}that{ print{ "Authentication successfull" } }
  }
}as es6 property{ @email }
create{ @user }as{ object{ } }
print{
  concat strings{
    "Hello, "
    @user.name
      |[eq] ui ask{ "First, tell me. What is your name?" }
    "!\\n"
    "Welcome to the application.\\n"
    "As you are "
    @user.age
      |= ui ask{ "And how old are you?" }
    " years old "
    when{ undefined }then{ "yet, you cannot use this app." }otherwise{
      "already, you can go to the home page."
    }
  }
}
print{}
function{ @source }returns{ @source | sum{ @ 500 } }
reversable function{ @source |= @ }that{
  reversable sum{ @ 500 }
  reversable substract{ @ 100 }
  reversable divide{ @ 2 }
  reversable multiply{ @ 5 }
  reversable return{ @ }
}
fn{ @source |= @ }that{
  #sum{ @ 500 }
  #subs{ @ 100 }
  #div{ @ 2 }
  #mult{ @ 5 }
  #ret{ @ }
}
fn{ @source |= @ }that{
  #sum{ @ 500 }
  #subs{ @ 100 }
  #div{ @ 2 }
  #mult{ @ 5 }
  #ret{ @ }
}
fn{ @i }returns{ #sum{ @i 100 }
  |= #subs{ @ 50 }
  |= #div{ @ 2 }
  |= #div{ @ 2 } }
fn{ @i }returns{ #sum{ @i 100 }
  |= #subs{ @ 50 }
  |= #div{ @ 2 } }
fn{ @i }returns{ #sum{ @i 100 }
  |= #subs{ @ 50 }
  |= #div{ @ 2 } }
fn{ @i }returns{ #sum{ @i 100 }
  |= #subs{ @ 50 }
  |= #div{ @ 2 } }
fn{ @i }returns{ #sum{ @i 100 }
  |= #subs{ @ 50 }
  |= #div{ @ 2 } }
fn{ @i }returns{ #sum{ @i 100 }
  |= #subs{ @ 50 }
  |= #div{ @ 2 } }
fn{ @i }returns{ #sum{ @i 100 }
  |= #subs{ @ 50 }
  |= #div{ @ 2 } }
fn{ @i }returns{ #sum{ @i 100 }
  |= #subs{ @ 50 }
  |= #div{ @ 2 } }
fn{ @i }returns{ #sum{ @i 100 }
  |= #subs{ @ 50 }
  |= #div{ @ 2 } }
fn{ @i }returns{ #sum{ @i 100 }
  |= #subs{ @ 50 }
  |= #div{ @ 2 } }
fn{ @i }returns{ #sum{ @i 100 }
  |= #subs{ @ 50 }
  |= #div{ @ 2 } }
function{ @x @y @z }returns{
  0 |@a= power{ @x 2 }
    |@b= multiply{ @y 2 }
    |@c= sum{ @z 2 }
    |= sum{ @ @a @b @c }
}
print{ "Advanced pipe operators:" }
"Hello, @!"
  |[string.replace] undefined
  |[print] @
print{
  "Formula:"
  0 |[math.sum] undefined
    |[math.sum] undefined
}